{
  "kind" : "Program",
  "declarations" : [ {
    "kind" : "VarDef",
    "var" : {
      "kind" : "TypedVar",
      "identifier" : {
        "kind" : "Identifier",
        "name" : "x",
        "location" : [ 1, 1, 1, 1 ]
      },
      "type" : {
        "kind" : "ClassType",
        "className" : "int",
        "location" : [ 1, 3, 1, 5 ]
      },
      "location" : [ 1, 1, 1, 5 ]
    },
    "value" : {
      "kind" : "IntegerLiteral",
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "value" : 0,
      "location" : [ 1, 9, 1, 9 ]
    },
    "location" : [ 1, 1, 1, 9 ]
  }, {
    "kind" : "VarDef",
    "var" : {
      "kind" : "TypedVar",
      "identifier" : {
        "kind" : "Identifier",
        "name" : "y",
        "location" : [ 2, 1, 2, 1 ]
      },
      "type" : {
        "kind" : "ClassType",
        "className" : "int",
        "location" : [ 2, 3, 2, 5 ]
      },
      "location" : [ 2, 1, 2, 5 ]
    },
    "value" : {
      "kind" : "IntegerLiteral",
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "value" : 0,
      "location" : [ 2, 9, 2, 9 ]
    },
    "location" : [ 2, 1, 2, 9 ]
  }, {
    "kind" : "VarDef",
    "var" : {
      "kind" : "TypedVar",
      "identifier" : {
        "kind" : "Identifier",
        "name" : "z",
        "location" : [ 3, 1, 3, 1 ]
      },
      "type" : {
        "kind" : "ClassType",
        "className" : "bool",
        "location" : [ 3, 3, 3, 6 ]
      },
      "location" : [ 3, 1, 3, 6 ]
    },
    "value" : {
      "kind" : "BooleanLiteral",
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "bool"
      },
      "value" : false,
      "location" : [ 3, 10, 3, 14 ]
    },
    "location" : [ 3, 1, 3, 14 ]
  } ],
  "statements" : [ {
    "kind" : "VarAssignStmt",
    "var" : {
      "kind" : "Identifier",
      "name" : "x",
      "location" : [ 5, 1, 5, 1 ]
    },
    "value" : {
      "kind" : "VarAssignExpr",
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "var" : {
        "kind" : "Identifier",
        "name" : "z",
        "location" : [ 5, 5, 5, 5 ]
      },
      "value" : {
        "kind" : "IntegerLiteral",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "value" : 1,
        "location" : [ 5, 9, 5, 9 ]
      },
      "location" : [ 5, 5, 5, 9 ]
    },
    "location" : [ 5, 1, 5, 9 ]
  }, {
    "kind" : "VarAssignStmt",
    "typeError" : "Expected type `int`; got type `object`",
    "var" : {
      "kind" : "Identifier",
      "name" : "x",
      "location" : [ 6, 1, 6, 1 ]
    },
    "value" : {
      "kind" : "VarAssignExpr",
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "object"
      },
      "var" : {
        "kind" : "Identifier",
        "name" : "y",
        "location" : [ 6, 5, 6, 5 ]
      },
      "value" : {
        "kind" : "NoneLiteral",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "object"
        },
        "location" : [ 6, 9, 6, 12 ]
      },
      "location" : [ 6, 5, 6, 12 ]
    },
    "location" : [ 6, 1, 6, 12 ]
  }, {
    "kind" : "VarAssignStmt",
    "typeError" : "Expected type `int`; got type `object`",
    "var" : {
      "kind" : "Identifier",
      "name" : "x",
      "location" : [ 7, 1, 7, 1 ]
    },
    "value" : {
      "kind" : "VarAssignExpr",
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "object"
      },
      "var" : {
        "kind" : "Identifier",
        "name" : "y",
        "location" : [ 7, 5, 7, 5 ]
      },
      "value" : {
        "kind" : "ListExpr",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "object"
        },
        "elements" : [ ],
        "location" : [ 7, 9, 7, 10 ]
      },
      "location" : [ 7, 5, 7, 10 ]
    },
    "location" : [ 7, 1, 7, 10 ]
  }, {
    "kind" : "VarAssignStmt",
    "typeError" : "Expected type `int`; got type `object`",
    "var" : {
      "kind" : "Identifier",
      "name" : "x",
      "location" : [ 8, 1, 8, 1 ]
    },
    "value" : {
      "kind" : "VarAssignExpr",
      "typeError" : "Not a variable: a",
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "object"
      },
      "var" : {
        "kind" : "Identifier",
        "name" : "a",
        "location" : [ 8, 5, 8, 5 ]
      },
      "value" : {
        "kind" : "NoneLiteral",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "object"
        },
        "location" : [ 8, 9, 8, 12 ]
      },
      "location" : [ 8, 5, 8, 12 ]
    },
    "location" : [ 8, 1, 8, 12 ]
  }, {
    "kind" : "VarAssignStmt",
    "typeError" : "Expected type `int`; got type `object`",
    "var" : {
      "kind" : "Identifier",
      "name" : "x",
      "location" : [ 9, 1, 9, 1 ]
    },
    "value" : {
      "kind" : "VarAssignExpr",
      "typeError" : "Not a variable: a",
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "object"
      },
      "var" : {
        "kind" : "Identifier",
        "name" : "a",
        "location" : [ 9, 5, 9, 5 ]
      },
      "value" : {
        "kind" : "ListExpr",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "object"
        },
        "elements" : [ ],
        "location" : [ 9, 9, 9, 10 ]
      },
      "location" : [ 9, 5, 9, 10 ]
    },
    "location" : [ 9, 1, 9, 10 ]
  }, {
    "kind" : "VarAssignStmt",
    "typeError" : "Expected type `int`; got type `bool`",
    "var" : {
      "kind" : "Identifier",
      "name" : "x",
      "location" : [ 10, 1, 10, 1 ]
    },
    "value" : {
      "kind" : "VarAssignExpr",
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "bool"
      },
      "var" : {
        "kind" : "Identifier",
        "name" : "y",
        "location" : [ 10, 5, 10, 5 ]
      },
      "value" : {
        "kind" : "BooleanLiteral",
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "bool"
        },
        "value" : true,
        "location" : [ 10, 9, 10, 12 ]
      },
      "location" : [ 10, 5, 10, 12 ]
    },
    "location" : [ 10, 1, 10, 12 ]
  } ],
  "location" : [ 1, 1, 10, 12 ]
}
